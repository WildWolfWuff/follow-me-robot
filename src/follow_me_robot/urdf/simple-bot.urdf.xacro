<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="test_bot">
    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
<xacro:property name="wheel_height" value="0.087" />
<xacro:property name="wheel_mass" value="6.5" /> <!-- in kg-->
<xacro:property name="PI" value="3.1415926535897931" />
<xacro:property name="wheel_offset_x" value="0.2225" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
<xacro:property name="wheel_offset_y" value="0.2045" />
<xacro:property name="wheel_offset_z" value="0.0" />
<xacro:property name="wheel_radius" value="0.127" />
<xacro:property name="update_rate" value="20" />

  <xacro:macro name="solid_cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}"
     />
  </xacro:macro>
  <xacro:macro name="omni_wheel" params="prefix parent *origin reflect wheel_radius update_rate:=20">
    <joint name="${prefix}_wheel_joint" type="continuous">
      <parent link="${parent}"/>
      <child link="${prefix}_wheel_link"/>
      <xacro:insert_block name="origin" />
      <axis xyz="0 1 0" rpy="0 0 0" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <cylinder length="${wheel_height}" radius="${wheel_radius}" />
          <!-- <mesh filename="file:///home/dev/follow-me-robot/src/follow_me_robot/meshes/omni_wheel_${reflect}.dae" /> -->
        </geometry>
      </visual>

      <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <cylinder length="${wheel_height}" radius="${wheel_radius}" />
        </geometry>
      </collision>

      <inertial>
        <mass value="${wheel_mass}" />
        <origin xyz="0 0 0" />
        <xacro:solid_cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
      </inertial>
    </link>

    <!-- Transmission is important to link the joints and the controller (see robot_control/config/robot_control.yaml)-->
    <transmission name="${prefix}_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_wheel_joint" >
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_wheel_joint_motor">
         <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <gazebo reference="${prefix}_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="1 0 0"/>
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
  </xacro:macro>
<xacro:macro name="lidar" params="parent *origin laser_name">

    <joint name="${laser_name}_laser_joint" type="fixed">
        <parent link="${parent}" />
        <child link="${laser_name}_laser_frame" />
        <xacro:insert_block name="origin" />
    </joint>

    <link name="${laser_name}_laser_frame">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04" />
            </geometry>
            <material name="red" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0.1" />
            <xacro:solid_cylinder_inertia m="0.1" h="0.04" r="0.05" />
        </inertial>
        
    </link>

    <gazebo reference="${laser_name}_laser_frame">
        <material>Gazebo/Red</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>10.0</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>--ros-args --remap ~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>${laser_name}_laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    </xacro:macro>
    <xacro:macro name="robot_body_geometry">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
        <box size="0.30 0.20 0.10"/>
    </geometry>
    </xacro:macro>
    <xacro:macro name="robot_body" params="wheel_radius">
        <xacro:macro name="omni_steering" params="">
    <gazebo>
        <plugin name="psuedo_mecanum" filename="libgazebo_ros_planar_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>50.0</odometryRate>
        <robotBaseFrame>base_footprint</robotBaseFrame>
        <publishTF>true</publishTF>
        </plugin>
    </gazebo>
    </xacro:macro>
    <xacro:macro name="loop" params="joints:=^ *element">
    <xacro:if value="${joints}">
        <xacro:property name="joint" value="${joints.pop(0)}"/>
        <joint_name>$(joint)</joint_name>
        <xacro:loop />
    </xacro:if>
    </xacro:macro>
    <xacro:macro name="ros_joints_state_publisher" params="joints update_rate:=20">
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher"
        filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>${update_rate}</update_rate>
        <xacro:loop joints="${joints}" />
        </plugin>
    </gazebo>
    </xacro:macro>
    <xacro:macro name="ros_joint_state_publisher" params="joint update_rate:=20">
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher"
        filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>${update_rate}</update_rate>
        <joint_name>${joint}</joint_name>
        </plugin>
    </gazebo>
    </xacro:macro>
    <xacro:macro name="ros_joint_pose_trajectory">
    <gazebo>
        <plugin name="gazebo_ros_joint_pose_trajectory"
        filename="libgazebo_ros_joint_pose_trajectory.so">
        <update_rate>2</update_rate>
        </plugin>
    </gazebo>
    </xacro:macro>
    <!-- Robot mechanical and motor parameters -->    

    <!-- BASE FOOTPRINT -->
    <link name="base_footprint">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
        <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
    </link>

    <joint name="robot_footprint_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="robot_body_link" />
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
    </joint>

    <!-- BASE_LINK -->
    <link name="robot_body_link">
    <inertial>
        <mass value="125.0" />
        <origin xyz="0 0 0" />
        <inertia  ixx="1.391" ixy="0.004"  ixz="0.0"  iyy="6.853"  iyz="0.0"  izz="6.125" />
    </inertial>

    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <xacro:robot_body_geometry />
        <material name="darkgrey">
            <color rgba="0.1 0.1 0.1 1"/>
        </material>
    </visual>

    <collision>
        <origin xyz="0 0 0" rpy="0 0 0 " />
        <xacro:robot_body_geometry />
    </collision>

    </link>

    </xacro:macro>

    <xacro:robot_body wheel_radius="${wheel_radius}" />
    <xacro:omni_wheel 
        prefix="front_right" 
        parent="robot_body_link" 
        reflect="2" 
        wheel_radius="${wheel_radius}" >
        <origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
    </xacro:omni_wheel>

    <xacro:omni_wheel 
        prefix="front_left" 
        parent="robot_body_link" 
        reflect="1" 
        wheel_radius="${wheel_radius}">
        <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
    </xacro:omni_wheel>

    <xacro:omni_wheel 
        prefix="back_left" 
        parent="robot_body_link" 
        reflect="1" 
        wheel_radius="${wheel_radius}">
        <origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
    </xacro:omni_wheel>

    <xacro:omni_wheel 
        prefix="back_right" 
        parent="robot_body_link" 
        reflect="2" 
        wheel_radius="${wheel_radius}">
        <origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
    </xacro:omni_wheel>

    <xacro:lidar parent="robot_body_link" laser_name="1">
        <origin xyz="0 0 0.3" rpy="0 0 0" />
    </xacro:lidar>

</robot>
