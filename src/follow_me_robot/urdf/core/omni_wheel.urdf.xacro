<?xml version="1.0"?>
<robot name="wheel"
  xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:include filename="inertial.urdf.xacro"/>
  <!-- Wheels -->

  <xacro:macro name="omni_wheel_geometry" params="parent *origin wheel_img side position wheel_height wheel_radius update_rate:=20">
    <xacro:solid_sphere name="${position}_${side}_wheel" mass="6.5" visual="omni_wheel_${wheel_img}.dae" xyz_axis="0 1 0">
      <xacro:insert_block name="origin" />
      <geometry></geometry>
    </xacro:solid_sphere>
  </xacro:macro>

  <xacro:macro name="wheel_motor" params="parent *origin wheel_img reflect side position wheel_height wheel_radius update_rate:=20">
    <xacro:property name="prefix" value="${position}_${side}_wheel" />
    <xacro:property name="motor_mass" value="0.1" />
    <xacro:property name="motor_h" value="0.1" />
    <xacro:property name="motor_d" value="0.1" />
    <xacro:property name="motor_w" value="0.1" />
    <xacro:property name="motor_offset" value="${motor_w/1.08 * reflect * -1}"/>
    <joint name="${prefix}_motor_joint" type="fixed">
      <parent link="${parent}"/>
      <child link="${prefix}_motor_link" />
      <xacro:insert_block name="origin" />
    </joint>
    <link name="${prefix}_motor_link">
      <visual>
        <origin xyz="0 ${motor_offset} 0" rpy="0 0 0" />
        <geometry>
          <box size="${motor_d} ${motor_w} ${motor_h}" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${motor_d} ${motor_w} ${motor_h}" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${motor_mass}" />
        <xacro:solid_cuboid_inertia m="${motor_mass}" d="${motor_d}" w="${motor_w}" h="${motor_h}"/>
      </inertial>
    </link>
    <xacro:omni_wheel parent="${prefix}_motor_link" wheel_img="${wheel_img}" side="${side}" position="${position}" wheel_height="${wheel_height}" wheel_radius="${wheel_radius}" update_rate="${update_rate}">
      <origin xyz="0 ${motor_offset+(wheel_height+0.01)*reflect} 0" />
    </xacro:omni_wheel>
  </xacro:macro>

  <xacro:macro name="omni_wheel" params="parent *origin wheel_img side position wheel_height wheel_radius update_rate:=20">
    <xacro:property name="wheel_mass" value="6.5" />
    <xacro:property name="prefix" value="${position}_${side}_wheel" />
    <!-- in kg-->
    <joint name="${prefix}_joint" type="continuous">
      <parent link="${parent}"/>
      <child link="${prefix}_link"/>
      <xacro:insert_block name="origin" />
      <axis xyz="0 1 0" />
      <limit effort="100" velocity="0"/>
      <joint_properties damping="0.0" friction="1.0"/>
    </joint>

    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <!-- <origin xyz="0 0 0" rpy="${pi/2} 0 0" /> -->
        <geometry>
          <mesh filename="file://$(find follow_me_robot)/urdf/meshes/omni_wheel_${wheel_img}.dae" />
          <!-- <cylinder length="${wheel_height}" radius="${wheel_radius}" /> -->
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <!-- <mesh filename="file://$(find follow_me_robot)/urdf/meshes/omni_wheel_${reflect}.dae" /> -->
          <cylinder length="${wheel_height}" radius="${wheel_radius}" />
        </geometry>
      </collision>

      <inertial>
        <mass value="${wheel_mass}" />
        <xacro:solid_cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
      </inertial>
    </link>

    <!-- Transmission is important to link the joints and the controller (see robot_control/config/robot_control.yaml)-->
    <transmission name="${prefix}_joint_trans" type="transmission_interface/SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_joint">
        <!-- <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <gazebo reference="${prefix}_link">
      <mu1 value="1.0"/>
      <mu2 value="1.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

  </xacro:macro>
</robot>
